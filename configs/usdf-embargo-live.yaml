# Configuration for the "live" ObsTAP service for /repo/embargo at USDF
#
# namespace and version are for possible schema migration only, do not affect table contents
namespace: embargo
version: 1
facility_name: Rubin-LSST
# We don't explicitly specify instrument_name - it's auto-generated from the corresponding Butler dimension
obs_collection: LATISS_LIVE       # may evolve as experience with this builds up
collection_type: RUN              # means we are using all RUN-type collections that match line below
collections: ["LATISS/raw/all", "LATISS/runs/quickLook/202.*"]
use_butler_uri: false             # do not use URI from Butler, use datalink_url_fmt defined below
dataset_types:
  raw:
    dataproduct_type: image
    dataproduct_subtype: lsst.raw
    calib_level: 1
    obs_id_fmt: "{records[exposure].obs_id}-{records[detector].full_name}"
    o_ucd: phot.count
    access_format: image/fits
    # access_url format is still under discussion/review:
    datalink_url_fmt: "https://usdf-rsp.slac.stanford.edu/api/datalink/links?ID=butler%3A//LATISS/{id}"
  calexp:
    dataproduct_type: image
    dataproduct_subtype: lsst.calexp
    calib_level: 2
    obs_id_fmt: "{records[visit].name}-{records[detector].full_name}"
    o_ucd: phot.count
    access_format: image/fits
    # access_url format is still under discussion/review:
    datalink_url_fmt: "https://usdf-rsp.slac.stanford.edu/api/datalink/links?ID=butler%3A//LATISS/{id}"
  quickLookExp:
    dataproduct_type: image
    dataproduct_subtype: lsst.quickLookExp
    calib_level: 2
    obs_id_fmt: "{records[exposure].obs_id}-{records[detector].full_name}"
    o_ucd: phot.count
    access_format: image/fits
    # access_url format is still under discussion/review:
    datalink_url_fmt: "https://usdf-rsp.slac.stanford.edu/api/datalink/links?ID=butler%3A//LATISS/{id}"
extra_columns:
  lsst_visit:
    template: "{visit}"
    type: "int"
  lsst_exposure:
    template: "{exposure}"
    type: "int"
  lsst_detector:
    template: "{detector}"
    type: "int"
  lsst_tract:
    template: "{tract}"
    type: "int"
  lsst_patch:
    template: "{patch}"
    type: "int"
  lsst_band:
    template: "{band}"
    type: "string"
    length: 32
  lsst_filter:
    template: "{physical_filter}"
    type: "string"
    length: 32
  lsst_dataset_type:
    template: "{dataset_type}"
    type: "string"
    length: 64
  lsst_run:
    template: "{run}"
    type: "string"
    length: 255
indices:
  # Indices for obscore table, spatial columns are indexed automatically.
  # We likely will need to extend this list to support most popular queries,
  # would be good to have a list of possible queries generated by TAP.
  instrument_name_idx: instrument_name
  lsst_visit_idx: lsst_visit
  lsst_exposure_idx: lsst_exposure
  dataproduct_idx: [dataproduct_type, dataproduct_subtype]
spectral_ranges:
  # This list includes every band defined now in registry, actual values for some
  # of them are probably very approximate. Keys in this section could be a band
  # name or a physical filter name
  "u": [330.0e-9, 400.0e-9]
  "u~nd": [330.0e-9, 400.0e-9]
  "g": [402.0e-9, 552.0e-9]
  "g~nd": [402.0e-9, 552.0e-9]
  "r": [552.0e-9, 691.0e-9]
  "r~nd": [552.0e-9, 691.0e-9]
  "i": [691.0e-9, 818.0e-9]
  "i~nd": [691.0e-9, 818.0e-9]
  "z": [818.0e-9, 922.0e-9]
  "z~nd": [818.0e-9, 922.0e-9]
  "y": [922.0e-9, 1060.0e-9]
  "y~nd": [922.0e-9, 1060.0e-9]
  "white": [null, null]
  "unknown": [null, null]
  "diffuser": [null, null]
  "notch": [null, null]
  "grid": [null, null]
  "grid~nd": [null, null]
  "spot": [null, null]
  "spot~nd": [null, null]
spatial_plugins:
  pgsphere:
    # adds pgsphere columns and indices
    cls: lsst.daf.butler.registry.obscore.pgsphere.PgSphereObsCorePlugin
    config:
      region_column: pgs_region         # name of a column for a region/polygon
      position_column: pgs_center       # name of a column for position/center
